<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Azure on Modern IT Engineer</title>
    <link>http://localhost:1313/tags/azure/</link>
    <description>Recent content in Azure on Modern IT Engineer</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 01 Oct 2023 18:39:14 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/azure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to automate IP ranges calculations in Azure using PowerShell</title>
      <link>http://localhost:1313/article/using-ipmgmt-more-samples/</link>
      <pubDate>Sun, 01 Oct 2023 18:39:14 -0700</pubDate>
      <guid>http://localhost:1313/article/using-ipmgmt-more-samples/</guid>
      <description>&lt;p&gt;Suppose we have been allocated the IP range of &lt;code&gt;10.172.0.0/16&lt;/code&gt; by the network team for planned Azure Landing Zones. The goal is to automate this by creating a tool that will automatically calculate IP ranges for us, based on some high-level and easy-to-understand details regarding the future networks.&lt;/p&gt;&#xA;&lt;p&gt;This notebook demonstrates how to achieve this using the &lt;a href=&#34;https://github.com/eosfor/ipmgmt&#34;&gt;ipmgmt&lt;/a&gt; module.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Considerations when running private AKS cluster</title>
      <link>http://localhost:1313/article/aks-considerations/</link>
      <pubDate>Sat, 04 Aug 2018 05:03:31 +0300</pubDate>
      <guid>http://localhost:1313/article/aks-considerations/</guid>
      <description>&lt;p&gt;For the last two weeks I&amp;rsquo;ve been playing with &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/aks/&#34;&gt;Azure Kubernetes Service&lt;/a&gt; (AKS) and with it&amp;rsquo;s public counterpart - &lt;a href=&#34;https://github.com/Azure/acs-engine&#34;&gt;acs-engine&lt;/a&gt;. Here is a bit about the experience I got with it, having in mind I&amp;rsquo;ve never worked with these tools before. Here I&amp;rsquo;m trying to look at this from the Infrastructure perspective, but not from the developers&amp;rsquo; perspective.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Enhancing VM Search in Azure with PowerShell</title>
      <link>http://localhost:1313/article/search-azure-objects2/</link>
      <pubDate>Thu, 17 Dec 2015 10:35:09 +0300</pubDate>
      <guid>http://localhost:1313/article/search-azure-objects2/</guid>
      <description>&lt;p&gt;In this walkthrough, we&amp;rsquo;ll explore various functionalities of PowerShell, including dynamic parameters, parallel execution of script blocks, and index building for efficient searches, among other features.&lt;/p&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s dive in by understanding the problem at hand. Often, there&amp;rsquo;s a need to search VMs not only by their names but also by their internal IP addresses or the names of their disks. However, the absence of an out-of-the-box API for this task led me to develop a custom tool. The goals were outlined as follows:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Search Azure Objects</title>
      <link>http://localhost:1313/article/search-azure-objects/</link>
      <pubDate>Mon, 02 Nov 2015 19:35:54 +0300</pubDate>
      <guid>http://localhost:1313/article/search-azure-objects/</guid>
      <description>&lt;p&gt;In our environment we have more than one subscription. Even more than five. And this amount grows constantly. What we do with all of this is we support VMs and stuff there. One of the issues is that users usually do not know name of Azure Service which is used to host their VMs, and it so happens that they do not know even their Subscription Name or Subscription ID. To bring up and control their VMs and environments the use some “middleware” which hides all of this info from them. So they usually come to us and say: “here you are a list of VMs we have problems with, please have a look and fix”. Sometimes such list contains not only VMs but storage accounts along with VMs etc. Unfortunately classic azure cmdlets does not provide an option to search for objects in the cloud by their name. On the other hand new Azure Management portal does. It can find objects by name. So I decided to do a little hack end use this API in order to simplify our live.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
